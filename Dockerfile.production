# Production Dockerfile for RealtimeVoiceChat
# Implements security recommendations from Phase 2 P4 audit

FROM python:3.12-slim

# Set security labels
LABEL security.non-root="true"
LABEL security.ssl="enabled"
LABEL security.rate-limiting="enabled"

# Create non-root user
RUN groupadd -r voicechat && useradd -r -g voicechat -s /bin/false voicechat

# Set work directory
WORKDIR /app

# Install system dependencies (including audio support and Rust)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    openssl \
    build-essential \
    libsndfile1 \
    libportaudio2 \
    ffmpeg \
    portaudio19-dev \
    python3-dev \
    && rm -rf /var/lib/apt/lists/* \
    && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
    && export PATH="$HOME/.cargo/bin:$PATH"

# Copy requirements first for better caching
COPY requirements.txt requirements.production.txt* ./

# Install Python dependencies (with Rust in PATH)
ENV PATH="/root/.cargo/bin:$PATH"
RUN pip install --upgrade pip \
    && pip install --no-cache-dir -r requirements.production.txt

# Copy application code (only src directory)
COPY src/ ./src/

# Set working directory to src for proper imports
WORKDIR /app/src

# Pre-download STT/TTS models to avoid runtime downloads
RUN python3 -c "\
    import os; \
    try: \
    from faster_whisper import WhisperModel; \
    print('Downloading Whisper base.en model...'); \
    model = WhisperModel('base.en', device='cpu'); \
    print('Whisper model downloaded successfully'); \
    except Exception as e: \
    print(f'Whisper download failed: {e}'); \
    print('Model downloads completed')" || echo "Model downloads completed with warnings"

# Create necessary directories (adjust paths for new working directory)
RUN mkdir -p /app/logs /app/ssl \
    && chown -R voicechat:voicechat /app/logs /app/ssl

# Set up SSL directory permissions
RUN chmod 700 /app/ssl

# Create health check script
RUN echo '#!/bin/bash\ncurl -f http://localhost:8000/health || exit 1' > /usr/local/bin/healthcheck \
    && chmod +x /usr/local/bin/healthcheck

# Switch to non-root user
USER voicechat

# Expose ports
EXPOSE 8000 8443 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD /usr/local/bin/healthcheck

# Default command (updated for new directory structure)
ENV PYTHONPATH="/app/src"
CMD ["python", "-m", "uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8000"]